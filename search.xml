<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>三天打鱼。两天晒网Python版</title>
      <link href="/2018/09/01/%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC%E3%80%82%E4%B8%A4%E5%A4%A9%E6%99%92%E7%BD%91Python%E7%89%88/"/>
      <url>/2018/09/01/%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC%E3%80%82%E4%B8%A4%E5%A4%A9%E6%99%92%E7%BD%91Python%E7%89%88/</url>
      <content type="html"><![CDATA[<p>问题概述：中国有句俗语叫“三天打鱼两天晒网”某人从2010年1月1日起开始“三天打鱼两天晒网”，问这个人在以后的某一天中是“打鱼”还是“晒网”。<br> &lt; !– more –&gt;<br>整体思路如下：</p><p>1）计算从2010年1月1日开始至指定日期共有多少天;</p><p>2）由于“打鱼”和“晒网”的周期为5天，所以将计算出的天数用5取除;</p><p>3）根据余数判断他是在“打鱼”还是在“晒网”;</p><pre><code>若余数为1,2,3，则他是在“打鱼”，否则是在“晒网”</code></pre><p>首先，我们要判断用户输入的日期是否正确，我在程序中规定日期的格式YYYYMMDD（年月日），并且只能为8位整数。采用INT（输入（XXX）即输入只能为整数，输入字符串时会产生异常，会提醒你输入整数。通过列表（STR（日期）），将输入的数字转为数组，方便之后提取年月日。也方便求输入的长度。通过LEN（日期）判断输入是否为8位。如果输入的不够八位数或者超过时也会产生异常，当输入正确的日期后，首先会数组提取日期，即数组0-3为年，4-5位月份，6-7为日。首先根据年份判断该日期是否在2010年之后，若不是则会产生异常。注意，Python中的异常采用尝试：…除了xxxError。</p><p>#输入现在的日期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">try:  </span><br><span class="line">    Date = int(input(read()))   #获取当前日期并规定输入格式只能为整数</span><br><span class="line">    date = list(str(Date))</span><br><span class="line">   </span><br><span class="line">    try:</span><br><span class="line">        if len(date) != 8:</span><br><span class="line">            print(&quot;输入日期有误！&quot;)</span><br><span class="line">        global year</span><br><span class="line">        year = date[0] + date[1] + date[2] + date[3]</span><br><span class="line">        year = int(year)         #将获取的年份从str类型转为int类型</span><br><span class="line">        month = date[4] + date[5]</span><br><span class="line">        month = int(month)       #将获取的月份从str类型转为int类型</span><br><span class="line">        day = date[6] + date[7]</span><br><span class="line">        day = int(day)           #将获取的天数从str类型转为int类型</span><br><span class="line">        </span><br><span class="line">        if year &lt; 2010:</span><br><span class="line">            print(&quot;请输入正确的日期！&quot;)</span><br><span class="line">        sum = allDays(year,month,day)</span><br><span class="line">        judge(sum)</span><br><span class="line">        allDays(year,month,day)    </span><br><span class="line">       </span><br><span class="line">    except IndexError:      #当输入为整形时，但不是8位数时报错</span><br><span class="line">        print(&quot;请输入八位整数&quot;)</span><br><span class="line">except ValueError:     #当输入为非整型时报错</span><br><span class="line">    print(&quot;请输入整数！&quot;)</span><br></pre></td></tr></table></figure></p><p>接下来到了重点了！</p><p>获取到正确的输入日期信息以后就要来计算距离2010年1月1日的总天数了，为了锻炼自己的算法，和对问题分析能力。本人的程序中没有直接采用通过日期函数直接来获取并计算总天数。而是通过两部分来算，一部分是算距离2010年有多少年，闰年有366天，平年有365天，通过自定义函数runYear（）来判断是否是闰年，函数如下图所示</p><p>#判断是不是闰年<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">def runYear(year):</span><br><span class="line">    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line">```           </span><br><span class="line"></span><br><span class="line">接下来算用户输入日期这一年已经过了多少天，如果是闰年2会有29天，其他情况1。5。3。7。9月有31天4.6.9.11有30天。所以首先要判断每个月有多少天然后将这些月份的总天数相加，最后加上用户输入的“天”。</span><br><span class="line"></span><br><span class="line">#判断每月有几天</span><br><span class="line"></span><br><span class="line">```def getDays(year,month):</span><br><span class="line">    days = 0</span><br><span class="line">    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:</span><br><span class="line">        days = 31</span><br><span class="line">    elif month == 4 or month == 6 or month == 9 or month == 11:</span><br><span class="line">        days = 30</span><br><span class="line">    elif month == 2:</span><br><span class="line">        if runYear(year):</span><br><span class="line">            days = 29</span><br><span class="line">        else:</span><br><span class="line">            days = 28</span><br><span class="line">    return days</span><br></pre></td></tr></table></figure></p><p>#计算该日期本年总天数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def thisYearDays(year,month,day):</span><br><span class="line">    sum = 0</span><br><span class="line">    i = 1</span><br><span class="line">    while i &lt; month:</span><br><span class="line">        monthDay = getDays(year,month)</span><br><span class="line">        sum += monthDay</span><br><span class="line">        i += 1</span><br><span class="line">    return sum + day</span><br></pre></td></tr></table></figure></p><p>最后将这两部分相加就是用户输入的日期距离2010年1月1日的总天数，然后将其对5取余，根据余数判断为“打鱼”还是“晒网”</p><p>#计算距离输入日期的总天数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def allDays(year,month,day):</span><br><span class="line">    sum = 0</span><br><span class="line">    i = 2010</span><br><span class="line">    while i &lt; year:</span><br><span class="line">        if runYear(i):</span><br><span class="line">            sum += 366</span><br><span class="line">        else:</span><br><span class="line">            sum += 365</span><br><span class="line">        i += 1</span><br><span class="line">    s = thisYearDays(year,month,day)</span><br><span class="line">    sum += s</span><br><span class="line">    return sum</span><br></pre></td></tr></table></figure></p><p>最后运行结果如下图所示:<br><img src="./images/三天打鱼两天晒网.png" alt="测试图"></p>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>测试图片</title>
      <link href="/2018/08/14/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87/"/>
      <url>/2018/08/14/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<p>测试加载本地照片<br><img src="./images/kobe.png" alt="Kobe"></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Python3爬虫常见错误</title>
      <link href="/2018/07/31/Python3%E7%88%AC%E8%99%AB%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
      <url>/2018/07/31/Python3%E7%88%AC%E8%99%AB%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<pre><code>    Python3相比Python2有较大的改动，版主在之前没有接触过Python的情况下爬虫遇到了很多问题，现在就跟大家分享一下。在Python2中爬虫时候，我们通常导入urllib包就行了，但是在3中必须导入的是urllib.request如果你没有写.request的话，编译器将会报错。将会报错。urllib.request 模块提供了最基本的构造 HTTP 请求的方法，利用它可以模拟浏览器的一个请求发起过程，同时它还带有处理 authenticaton（授权验证），redirections（重定向），cookies (浏览器Cookies）以及其它内容。如果在Python3中使用的是urllib.urlopen 就是打开url网址的操作。编译器依旧会报错。因为在3中必须要urllib.request.urlopen这样来打开url网址。后面还要用到urlretrieve也一样，因为导入的包是urllib.request所以都要先在这里面调用这些函数！</code></pre>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XUST</title>
      <link href="/2018/07/30/XUST/"/>
      <url>/2018/07/30/XUST/</url>
      <content type="html"><![CDATA[<p>这是我的第一篇博客 欢迎大家常来访问 范江稳是世界上最帅的男人</p>]]></content>
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 试试水 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
